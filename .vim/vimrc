" fzf plugin (debian install location)
source /usr/share/doc/fzf/examples/fzf.vim
let $FZF_DEFAULT_COMMAND="find -L . -type f" " :FZF show only files

filetype plugin indent on

set background=dark
set t_Co=256             " 256 colors
syntax on
colorscheme solarized

" custom color for listchars (trailing spaces and tabs)
highlight SpecialKey cterm=NONE ctermbg=NONE ctermfg=240 gui=NONE guibg=NONE guifg=#586e75

" remove default underline from current line number (https://stackoverflow.com/questions/58174536)
highlight CursorLineNr cterm=NONE

set encoding=utf8        " set utf8 as standard encoding

set complete+=kspell     " word completion
set completeopt=menuone  " show completion menu even if there's only one match
set completeopt+=longest " insert only longest common text of all matches
set omnifunc=syntaxcomplete#Complete " basic completion for programming languages (C-x C-O)

set wildmenu             " command-line completion menu
set wildmode=longest,list,full " complete longest common prefix before full
set wildignorecase       " ignore case when completing file names and directories

set history=50
set nobackup             " no backup files
set hidden               " possibility to have more than one unsaved buffer
set viminfo+=n~/.vim/viminfo " viminfo file inside ~/.vim

set scrolloff=3          " scroll lines offset using j/k

set ignorecase           " ignore case when searching
set smartcase            " but become case sensitive if there are uppercase characters
set hlsearch             " highlights search results
set incsearch            " incremental search
set magic                " change the way backslashes are used in search patterns

set textwidth=80         " max line width
set colorcolumn=81       " highlights 81th column
set cursorline           " highlights current line

set splitbelow           " open horizontal split below
set splitright           " open vertical split on the right

set expandtab            " spaces instead of tabs
set tabstop=8            " 1 tab == 8 spaces
set autoindent
set smarttab             " smart tab handling for indenting
set shiftwidth=8         " spaces for autoindent
set list                 " needed to get listchars working
set listchars=trail:·,tab:·· " show trailing spaces and tabs as ·

set formatoptions+=j     " remove a comment leader when joining lines
set backspace=indent,eol,start " proper backspace behavior

set ruler                " show line and column number of the cursor position
set rulerformat=%=%M\ %l,%c%V\ %p%%

set lazyredraw           " do not redraw screen in the middle of a macro

set spellcapcheck=       " do not spell check capital letters

set cscopetag            " use both cscope and ctag for 'ctrl-]', ':ta', and 'vim -t'
set cscopetagorder=0     " check cscope for definition of a symbol before checking ctags

" go wants tabs
autocmd Filetype go setlocal noexpandtab
autocmd Filetype go setlocal listchars=trail:·,tab:\ \ 

" return to last edit position when opening files
autocmd BufReadPost *
    \ if line("'\"") > 0 && line("'\"") <= line("$") |
    \   exe "normal! g`\"" |
    \ endif

" index code using ctags and cscope and (re)load cscope database
function! Index()
    silent !ctags -R .
    silent !cscope -Rbq
    redraw!
    cscope kill 0
    cscope add cscope.out
endfunction

command! Index :call Index()

" make this line a (nice) markdown header
command! H1 normal yypVr=2o<ESC>
command! H2 normal yypVr-2o<ESC>

" toggle paste mode
set pastetoggle=<F2>

" turn off highlighting after a search
nnoremap <F3> :nohlsearch<CR>

" toggle spell checker
nnoremap <F4> :setlocal spell! spelllang=en,it<CR>

" list buffers and prepare to switch
nnoremap gb :buffers<CR>:b

" recenter after hitting next/previous search match
nnoremap n nzz
nnoremap N Nzz

" Ctrl+Space cscope find c symbol under cursor
nnoremap <C-@> :cscope find s <C-R>=expand("<cword>")<CR><CR>

" cscope find this file
cnoreabbrev csf cscope find f

" cscope find this c symbol
cnoreabbrev css cscope find s
