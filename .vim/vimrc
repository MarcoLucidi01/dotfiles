set background=dark
set t_Co=256             " 256 colors
syntax on
colorscheme paramount

" custom color for listchars (trailing spaces and tabs)
highlight SpecialKey cterm=NONE ctermbg=NONE ctermfg=235 gui=NONE guibg=NONE guifg=#262626

set encoding=utf8        " set utf8 as standard encoding

set path=**
set complete+=kspell     " word completion
set completeopt=menuone  " show completion menu even if there's only one match
set completeopt+=longest " insert only longest common text of all matches

set wildmenu             " command-line completion menu

set history=50
set nobackup             " no backup files

set scrolloff=3          " scroll lines offset using j/k
set relativenumber       " numbers are relative to current line

set ignorecase           " ignore case when searching
set smartcase            " but become case sensitive if there are uppercase characters
set hlsearch             " highlights search results
set incsearch            " incremental search
set magic                " change the way backslashes are used in search patterns

set textwidth=80         " max line width
set colorcolumn=81       " highlights 81th column
set cursorline           " highlights current line

set splitbelow           " open horizontal split below
set splitright           " open vertical split on the right

set expandtab            " spaces instead of tabs
set tabstop=8            " 1 tab == 8 spaces
set autoindent
set smarttab             " smart tab handling for indenting
set shiftwidth=8         " spaces for autoindent
set listchars=trail:-,tab:>-    " show trailing spaces as - and tabs as >-------
set list                 " needed to get listchars working

filetype plugin indent on

set formatoptions+=j     " remove a comment leader when joining lines

set ruler                " show line and column number of the cursor position
set laststatus=2         " always show statusline

" go wants tabs
autocmd Filetype go setlocal noexpandtab

" return to last edit position when opening files
autocmd BufReadPost *
    \ if line("'\"") > 0 && line("'\"") <= line("$") |
    \   exe "normal! g`\"" |
    \ endif

" MakeTags creates the "tags" file (ctags must be installed)
command! MakeTags !ctags -R .

" F2 toggle to enter or exit paste mode
set pastetoggle=<F2>

" F3 turn off highlighting after a search
map <F3> :nohlsearch<CR>

" F4 open files explorer
map <F4> :Explore<CR>

" F5 starts a shell
map <F5> :shell<CR>

" toggle spell checker
map <F6> :setlocal spell! spelllang=en_us<CR>

" , go to next window
map , <C-W>w

" ; go to previous window
map ; <C-W>p

" - increment vertical window size
map - <C-W>+

" _ reduce vertical window size
map _ <C-W>-

" \ increment horizontal window size
map \ <C-W>>

" | reduce horizontal window size
map \| <C-W><

" tab go to next buffer
map <tab> :bnext<CR>

" Shift+tab go to previous buffer
map <S-tab> :bprevious<CR>

let g:netrw_banner=0                                " hide banner
let g:netrw_liststyle=3                             " tree view
let g:netrw_bufsettings='noma nomod nobl nowrap ro' " keep relative numbers
